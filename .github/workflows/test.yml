# .github/workflows/test.yml
name: C Test Suite

on:
  push:
    branches: [master]
  pull_request:

jobs:
# This job runs unit tests and integration tests using Valgrind to check for memory leaks.
  test:
    name:  Run Unit, Integration, and Valgrind Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        #fix the ref to master branch and fetch all history for gcovr
        with:
          ref: master
          fetch-depth: 0
          
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential make
          
      - name: Install gcovr
        run: pip install gcovr
        
      - name: Install Valgrind
        run: sudo apt-get install -y valgrind
        
      - name: Prepare build report file
        run: |
          mkdir -p build
          echo "Build Report - gestion_stock" > build_report.txt
          echo "Date: $(date)" >> build_report.txt
          echo "Commit: $GITHUB_SHA" >> build_report.txt
          echo "Branch: $GITHUB_REF_NAME" >> build_report.txt
          echo "" >> build_report.txt

      - name: Run unit tests and capture output
        run: |
          echo " Unit Tests:" >> build_report.txt
          make test >> build_report.txt 2>&1 || echo " Unit tests failed." >> build_report.txt

      - name: Run integration tests and capture output
        run: |
          echo "" >> build_report.txt
          echo " Integration Tests:" >> build_report.txt
          make test-integration >> build_report.txt 2>&1 || echo " Integration tests failed." >> build_report.txt

      - name: Run Valgrind on unit tests
        run: |
          echo "" >> build_report.txt
          echo " Valgrind (Unit Tests):" >> build_report.txt
          valgrind --leak-check=full --error-exitcode=1 ./build/test_database >> build_report.txt 2>&1 || echo "❌ Valgrind failed." >> build_report.txt

      - name: Run Valgrind on integration tests
        run: |
          echo "" >> build_report.txt
          echo " Valgrind (Integration Tests):" >> build_report.txt
          valgrind --leak-check=full --error-exitcode=1 ./build/test_integration >> build_report.txt 2>&1 || echo "❌ Valgrind failed." >> build_report.txt

      - name: Generate code coverage report and append summary
        run: |
          echo "" >> build_report.txt
          echo " Code Coverage Summary:" >> build_report.txt
          make coverage >> build_report.txt 2>&1 || echo " Coverage generation failed." >> build_report.txt

        
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/coverage.html

      - name: Save MR report
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p reports
          echo "🧪 MR Test Report - PR #${{ github.event.pull_request.number }}" > reports/mr_report_${{ github.event.pull_request.number }}.txt
          cat build_report.txt >> reports/mr_report_${{ github.event.pull_request.number }}.txt
#